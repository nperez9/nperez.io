{"version":3,"sources":["utils/publicRoutes.js","translator.js","library/grid.js","library/Container.jsx","library/Divider.jsx","components/core/ShowCode.jsx","library/ButtonLink.jsx","library/Button.jsx","components/home/HomeTitle.jsx","data/socialLinks.js","data/tecnologies.js","components/home/TecnologiesGroup.jsx","components/home/HomeContent.jsx","components/home/Home.jsx","components/about/About.jsx","data/portfolioList.js","components/portfolio/PortfolioItem.jsx","components/portfolio/PortfolioList.jsx","components/portfolio/Portfolio.jsx","components/contact/Contact.jsx","components/Router.js","components/core/LenguagePicker.jsx","components/core/Header.jsx","components/core/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["publicResource","publicRoute","process","i18n","use","Backend","initReactI18next","init","lng","backend","loadPath","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","container","maxWidth","display","margin","padding","style","Container","children","css","Divider","color","height","backgroundColor","defaultProps","ShowCode","tag","ButtonLink","link","isExternal","external","className","href","target","rel","internal","Button","classes","type","outline","buttonClasses","clasess","heigth","textAlign","position","img","width","HomeTitle","t","useTranslation","socialLinks","name","text","tecnologies","groupName","tecs","logo","marginBottom","fontSize","flexFlow","alignItems","justifyContent","marginTop","TecnologiesGroup","tecGroup","map","key","src","alt","h4","flexDirection","HomeContent","tecnologiesContent","content","sl","Home","about","portfolioList","maxHeight","borderRadius","flexWrap","gap","PortfolioItem","item","cover_image","short_description","github_url","play_url","PortfolioList","itemList","id","console","info","Portfolio","a","i","marginRight","contact","contactLinks","contentSocialLinks","includes","toLocaleLowerCase","router","path","exact","component","About","Contact","from","to","float","select","fontFamily","LanguagePicker","onChange","event","changeLanguage","value","defaultValue","textAling","LenguagePicker","paddingLeft","Header","bottom","Footer","xmlns","fill","class","viewBox","d","App","fallback","Router","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b815be9d.chunk.js","sourcesContent":["/**\r\n * return a resource inside public folder\r\n * @param {string} publicRoute \r\n */\r\nexport const publicResource = (publicRoute) => `${process.env.PUBLIC_URL}${publicRoute}`;","import i18n from 'i18next';\r\nimport Backend from 'i18next-xhr-backend';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nimport { publicResource } from './utils';\r\n\r\ni18n\r\n  .use(Backend)\r\n  .use(initReactI18next)\r\n  .init({\r\n    lng: 'en',\r\n    backend: {\r\n      loadPath: publicResource('/translations/{{lng}}.json'),\r\n    },\r\n    fallbackLng: 'en',\r\n    debug: true,\r\n    ns: ['translations'],\r\n    defaultNS: 'translations',\r\n    keySeparator: false,\r\n    interpolation: {\r\n      escapeValue: false,\r\n      formatSeparator: ','\r\n    },\r\n    react: {\r\n      wait: true\r\n    }\r\n  });\r\n\r\nexport default i18n;","export const container = {\r\n  maxWidth: '1200px',\r\n  display: 'block',\r\n  margin: '0 auto',\r\n  '@media (max-width: 1200px)': {\r\n    padding: 10,\r\n    'padding-bottom': 60,\r\n  },\r\n  'padding-bottom': 60\r\n}","/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\nimport { container } from './grid';\r\n\r\nconst style = {\r\n  ...container\r\n};\r\n\r\nconst Container = ({ children }) => {\r\n  return <section css={style}> {children} </section>;\r\n}\r\n\r\nexport default Container;","/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\nimport { container } from './grid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst style = {\r\n  ...container,\r\n  padding: '0px !important',\r\n  margin: '20px auto',\r\n};\r\n\r\nconst Divider = ({ color, height }) => {\r\n  style.backgroundColor = color;\r\n  style.height = height;\r\n  \r\n  return <div css={style}></div>;\r\n}\r\n\r\nDivider.propTypes = {\r\n  color: PropTypes.string,\r\n  height: PropTypes.number,\r\n};\r\n\r\nDivider.defaultProps = {\r\n  color: '#d6d6d6',\r\n  height: 1,\r\n};\r\n\r\nexport default Divider;","import React from 'react';\r\n\r\nexport const ShowCode = ({ tag, children }) => {\r\n  const style = { color: '#F92672' };\r\n\r\n  return (\r\n    <>\r\n      <span style={style}>{`<${tag}> `}</span>\r\n      {children}\r\n      <span style={style}>{` </${tag}>`}</span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowCode;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport ShowCode from '../components/core/ShowCode';\r\n\r\nconst ButtonLink = ({ link, children, isExternal }) => {\r\n\tconst external = (\r\n\t\t<a className=\"btn btn-outline-light\" href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t<ShowCode tag={\"a\"}>\r\n\t\t\t\t{children}\r\n\t\t\t</ShowCode>\r\n\t\t</a>\r\n\t);\r\n\tconst internal = (\r\n\t\t<Link className=\"btn btn-outline-light\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t<ShowCode tag={\"a\"}>\r\n\t\t\t\t{children}\r\n\t\t\t</ShowCode>\r\n\t\t</Link>\r\n\t);\r\n\r\n\treturn isExternal ? external : internal;\r\n};\r\n\r\nButtonLink.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tlink: PropTypes.string.isRequired,\r\n\tisExternal: PropTypes.bool,\r\n};\r\n\r\nButtonLink.defaultProps = {\r\n\tisExternal: true,\r\n};\r\n\r\nexport default ButtonLink;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst buttonTypes = [\r\n  'primary',\r\n  'secondary',\r\n  'success',\r\n  'danger',\r\n  'warning',\r\n  'info',\r\n  'light',\r\n  'dark',\r\n  'link',\r\n];\r\n\r\nexport const Button = ({ children, classes, type, outline }) => {\r\n  const isOutlined = (outline) ? '-outline' : '';\r\n  const buttonClasses = `btn${isOutlined}-${type}`;\r\n\r\n  return (\r\n    <button className={`btn ${buttonClasses} ${classes}`} type=\"button\">\r\n      { children }\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.defaultProps = {\r\n  type: 'primary',\r\n  clasess: '',\r\n  outline: false,\r\n};\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  classes: PropTypes.string,\r\n  type: PropTypes.oneOf(buttonTypes),\r\n  outline: PropTypes.bool,\r\n};\r\n\r\nexport default Button;\r\n","/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { ShowCode } from '../core/ShowCode';\r\n\r\nconst style = {\r\n  heigth: '100vh',\r\n  textAlign: 'center',\r\n  position: 'relative',\r\n  img: {\r\n    width: '200px',\r\n    heigth: '200px',\r\n  },\r\n};\r\n\r\nconst HomeTitle = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <section css={style}>\r\n      <h1>\r\n        <ShowCode tag=\"h1\"> \r\n          { t('home.title') } \r\n        </ShowCode>\r\n      </h1>\r\n      <h2>\r\n        <ShowCode tag=\"h2\"> \r\n          {t('home.subtitle')}\r\n        </ShowCode>\r\n      </h2>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default HomeTitle;\r\n","export const socialLinks = [\r\n  {\r\n    link: 'https://github.com/nperez9',\r\n    name: 'GitHub',\r\n    text: 'contact.github',\r\n  },\r\n  {\r\n    link: 'https://stackoverflow.com/users/6888888/nperez9',\r\n    name: 'StackOverflow',\r\n    text: 'contact.stackoverflow',\r\n  },\r\n  {\r\n    link: 'https://www.linkedin.com/in/nicol%C3%A1s-agust%C3%ADn-perez-23a5b1aa',\r\n    name: 'LinkedIn',\r\n    text: 'contact.linkedin',\r\n  },\r\n  {\r\n    link: 'mailto:nicolasperez95.a@gmail.com',\r\n    name: 'Gmail',\r\n    text: 'contact.gmail',\r\n  },\r\n];\r\n","export const tecnologies = [\r\n  {\r\n    groupName: 'Videogames',\r\n    tecs: [\r\n      {\r\n        name: 'Unity',\r\n        logo: 'unity-logo.png'\r\n      },\r\n      {\r\n        name: 'C#',\r\n        logo: 'c-logo.png',\r\n      },\r\n      {\r\n        name: 'Aseprite',\r\n        logo: 'asesprite-logo.png',\r\n      },      \r\n    ]\r\n  },\r\n  {\r\n    groupName: 'Front-end',\r\n    tecs: [\r\n      {\r\n        name: 'React',\r\n        logo: 'react-icon.svg'\r\n      },\r\n      {\r\n        name: 'Angular',\r\n        logo: 'angular-logo.png',\r\n      },\r\n      {\r\n        name: 'Webpack',\r\n        logo: 'webpack-logo.png',\r\n      },\r\n      {\r\n        name: 'TS',\r\n        logo: 'ts-logo.png',\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    groupName: 'Back-end',\r\n    tecs: [\r\n      {\r\n        name: 'NodeJs',\r\n        logo: 'nodejs-logo.png'\r\n      },\r\n      {\r\n        name: 'MongoDB',\r\n        logo: 'mongo-logo.png'\r\n      },\r\n      {\r\n        name: 'Docker',\r\n        logo: 'docker-logo.png',\r\n      },\r\n      {\r\n        name: 'MySql',\r\n        logo: 'mysql-logo.png',\r\n      },\r\n      {\r\n        name: 'TS',\r\n        logo: 'ts-logo.png',\r\n      }\r\n    ]\r\n  }\r\n];\r\n","/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\nimport { publicResource } from '../../utils';\r\n\r\nconst style = {\r\n  '.tec-group-title': {\r\n    marginBottom: '15px',\r\n    fontSize: '16px',\r\n  },\r\n  '.tecs-container': {\r\n    display: 'flex',\r\n    flexFlow: 'row wrap',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginBottom: '20px',\r\n    '.tec-item': {\r\n      width: '170px',\r\n      padding: '15px',\r\n      '> img': {\r\n        maxWidth: '130px',\r\n        height: '130px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      },\r\n      '> span': {\r\n        marginTop: '5px',\r\n        display: 'inline-block'\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst TecnologiesGroup = ({ tecGroup }) => {\r\n  return (\r\n    <div className='tec-group' css={style}>\r\n      <h5 className='tec-group-title'>{tecGroup.groupName}:</h5>\r\n      <div className=\"tecs-container\">\r\n        {\r\n          tecGroup.tecs.map((t) => {\r\n            return (\r\n              <div className='tec-item' key={t.name}>\r\n                <img src={publicResource(`/images/${t.logo}`)} alt={t.name} />\r\n                <span>{t.name}</span>\r\n              </div>\r\n            );\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TecnologiesGroup;\r\n","/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { socialLinks } from '../../data/socialLinks';\r\nimport { tecnologies } from '../../data/tecnologies';\r\nimport { Divider, ButtonLink } from '../../library';\r\n\r\nimport TecnologiesGroup from './TecnologiesGroup';\r\n\r\nconst style = {\r\n  textAlign: 'center',\r\n  h4: {\r\n    marginBottom: 30,\r\n    fontSize: 18\r\n  },\r\n  '.social-block': {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexDirection: 'row',\r\n    '@media (max-width: 780px)': {\r\n      flexDirection: 'column',\r\n      '> div': {\r\n        margin: '10px auto',\r\n      },\r\n    },\r\n    '> div': {\r\n      padding: '0 20px',\r\n    },\r\n  },\r\n};\r\n\r\nconst HomeContent = () => {\r\n  let tecnologiesContent = null;\r\n  let content = null;\r\n  const { t } = useTranslation();\r\n\r\n  tecnologiesContent = tecnologies.map((tecGroup) => {\r\n    return <TecnologiesGroup tecGroup={tecGroup} key={tecGroup.groupName} />\r\n  });\r\n\r\n  content = socialLinks.map((sl) => {\r\n    return (\r\n      <div key={sl.name}>\r\n        <ButtonLink link={sl.link}>\r\n          {sl.name}\r\n        </ButtonLink>\r\n      </div>\r\n    );\r\n  });\r\n\r\n\r\n  return (\r\n    <section css={style}>\r\n      <div>\r\n      <h4>{ t('home.tecnologies') }</h4>\r\n        <div>\r\n          { tecnologiesContent }\r\n        </div>\r\n      </div>\r\n      <Divider />\r\n      <div>\r\n        <h4>{ t('home.findMe') }</h4>\r\n        <div className=\"social-block\">{content}</div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default HomeContent;","/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\n\r\nimport { container, Divider } from '../../library';\r\nimport HomeTitle from './HomeTitle';\r\nimport HomeContent from './HomeContent';\r\n\r\nconst style = {\r\n  ...container\r\n};\r\n\r\nconst Home = () => {\r\n  return (\r\n    <main css={style}>\r\n      <HomeTitle />\r\n      <Divider />\r\n      <HomeContent />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\n\r\nconst about = () => {\r\n  return <div>your component about</div>;\r\n};\r\n\r\nexport default about;","export const portfolioList = [\r\n\t{\r\n\t\t\"id\": 1,\r\n\t\t\"type\": \"videogame\",\r\n\t\t\"name\": \"Super Cannon Blast!\",\r\n\t\t\"cover_image\": \"/images/portfolio/cannon-blast/cover-imag.png\",\r\n\t\t\"description_images\": [\r\n\t\t\t\"/images/portfolio/cannon-blast/cover-imag.png\",\r\n\t\t\t\"/images/portfolio/cannon-blast/screen-level-1.png\",\r\n\t\t\t\"/images/portfolio/cannon-blast/screen-level-2.png\",\r\n\t\t],\r\n\t\t\"videos\": [],\r\n\t\t\"description\": \"A full action arcade game, inspired by donkey kong country\",\r\n\t\t\"short_description\":\"An arcade 2D game full of action, based in barrel mechanincs, go to the end of the level and grab the coins!\",\t\t\r\n\t\t\"github_url\": \"https://github.com/nperez9/cannon-blast\",\r\n\t\t\"isPlayable\": true,\r\n\t\t\"play_url\": \"/proyects/cannon-blast\",\r\n\t\t\"itch_url\": \"\",\r\n\t},\r\n\t{\r\n\t\t\"id\": 2,\r\n\t\t\"type\": \"videogame\",\r\n\t\t\"name\": \"Pokeclon\",\r\n\t\t\"cover_image\": \"/images/portfolio/pokeclon/pc-3.png\",\r\n\t\t\"description_images\": [\r\n\t\t\t\"/images/portfolio/pokeclon/pc-1.png\",\r\n\t\t\t\"/images/portfolio/pokeclon/pc-2.png\",\r\n\t\t\t\"/images/portfolio/pokeclon/pc-3.png\",\r\n\t\t\t\"/images/portfolio/pokeclon/pc-4.png\",\r\n\t\t],\r\n\t\t\"videos\": [],\r\n\t\t\"description\": \"A full action arcade game, inspired by donkey kong country\",\r\n\t\t\"short_description\":\"A fan mande pokemon game made in unity\",\t\t\r\n\t\t\"github_url\": \"https://github.com/nperez9/poketSouls\",\r\n\t\t\"isPlayable\": true,\r\n\t\t\"play_url\": \"\",\r\n\t\t\"itch_url\": \"\",\r\n\t}\r\n];","/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\n\r\nimport { ButtonLink, Divider } from '../../library';\r\nimport { publicResource } from '../../utils';\r\n\r\nconst style = {\r\n\tdisplay: 'flex',\r\n\tmaxHeight: '300px',\r\n\twidth: '100%',\r\n\tpadding: '20px 0',\r\n\t'.item-image': {\r\n\t\twidth: '35%',\r\n\t\t'img': {\r\n\t\t\twidth: '100%',\r\n\t\t\tborderRadius: '10px',\r\n\t\t}\r\n\t},\r\n\t'.item-content': {\r\n\t\tpadding: '0 20px',\r\n\t\twidth: '65%',\r\n\t\tdisplay: 'flex',\r\n\t\tflexFlow: 'column',\r\n\t\tjustifyContent: 'space-between',\r\n\t\t'.item-buttons': {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflexWrap: 'wrap',\r\n\t\t\tflexFlow: 'row',\r\n\t\t\tgap: '10px',\r\n\t\t\tjustifyContent: 'flex-start',\r\n\t\t}\r\n\t},\r\n\t'@media (max-width: 780px)': {\r\n\t\tflexFlow: 'column',\r\n\t\tmaxHeight: 'none',\r\n\t\t'.item-image': {\r\n\t\t\twidth: '100%',\r\n\t\t\tpadding: '10px',\r\n\t\t},\r\n\t\t'.item-content': {\r\n\t\t\twidth: '100%',\r\n\t\t\tpadding: '0 10px',\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst PortfolioItem = ({ item }) => {\r\n\treturn (\r\n\t\t<div className='item-container' css={style}>\r\n\t\t\t<div className='item-image'>\r\n\t\t\t\t<img alt={item.name} src={publicResource(item.cover_image)} />\r\n\t\t\t</div>\r\n\t\t\t<div className='item-content'>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h4>{item.name}</h4>\r\n\t\t\t\t\t<Divider />\r\n\t\t\t\t\t<p>{item.short_description}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='item-buttons'>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// item.id && (<ButtonLink link={publicResource(`/portfolio/${item.id}`)} isExternal={false}>Details</ButtonLink>)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{item.github_url && (<ButtonLink link={item.github_url}>Code</ButtonLink>)}\r\n\t\t\t\t\t{item.play_url && (<ButtonLink link={publicResource(item.play_url)} >Play</ButtonLink>)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default PortfolioItem;","/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\n\r\nimport { portfolioList } from '../../data';\r\nimport { Container, Divider } from '../../library';\r\n\r\nimport PortfolioItem from './PortfolioItem';\r\n\r\nconst PortfolioList = () => {\r\n\tconst itemList = portfolioList.map(item => {\r\n\t\treturn (\r\n\t\t\t<article key={item.id}>\r\n\t\t\t\t<PortfolioItem item={item} />\r\n\t\t\t\t<Divider />\r\n\t\t\t</article>\r\n\t\t);\r\n\t});\r\n\r\n\tconsole.info(itemList);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{itemList}\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default PortfolioList;","/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\n\r\nimport { ShowCode } from '../core/ShowCode';\r\nimport { Container, Divider } from '../../library';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\nimport PortfolioList from './PortfolioList';\r\n\r\nconst style = {\r\n  textAlign: \"center\"\r\n};\r\n\r\nconst Portfolio = () => {\r\n  const { t } = useTranslation();\r\n  \r\n  return (\r\n    <Container>\r\n      <h1 style={style}>\r\n        <ShowCode tag={\"h1\"}>\r\n          {t(\"portfolio.title\")}\r\n        </ShowCode>\r\n      </h1>\r\n      <Divider />\r\n      <PortfolioList />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Portfolio;","/* eslint-disable react-hooks/rules-of-hooks */\r\n/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { container } from '../../library/grid';\r\nimport { socialLinks } from '../../data/socialLinks';\r\n\r\nconst style = {\r\n  ...container,\r\n  textAlign: 'center',\r\n  a: {\r\n    display: 'block',\r\n    margin: 12,\r\n    i: {\r\n      heigth: 24,\r\n      width: 24,\r\n      marginRight: 14,\r\n    },\r\n  },\r\n};\r\n\r\nconst contact = () => {\r\n  const contactLinks = ['linkedin', 'gmail'];\r\n  const { t } = useTranslation();\r\n\r\n  const contentSocialLinks = socialLinks.map(({ name, link, text }) => {\r\n    if (!contactLinks.includes(name.toLocaleLowerCase())) {\r\n      return null;\r\n    }\r\n    console.info(text);\r\n    return (\r\n      <a key={name} href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        <i className={`nes-icon ${name.toLocaleLowerCase()} is-small`} />\r\n        {t(text)}\r\n      </a>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <main css={style}>\r\n      <h1>Contact me!</h1>\r\n      <div>{contentSocialLinks}</div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default contact;\r\n","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport Home from './home/Home';\r\nimport About from './about/About';\r\nimport Portfolio from './portfolio/Portfolio';\r\nimport Contact from './contact/Contact';\r\n\r\nconst router = () => {\r\n  return (\r\n      <Switch>\r\n        <Route path=\"/home\" exact component={Home} />      \r\n        <Route path=\"/about\" exact component={About} />\r\n        <Route path=\"/portfolio\" exact component={Portfolio} />\r\n        <Route path=\"/portfolio/:id\" exact component={Portfolio} />\r\n        <Route path=\"/contact\" exact component={Contact} />\r\n        <Redirect exact from=\"/\" to=\"/home\" />\r\n      </Switch>\r\n  );\r\n};\r\n\r\nexport default router;\r\n","/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst style = {\r\n  display: 'inline-block',\r\n  float: 'right',\r\n  '#lng_select': {\r\n    width: '120px',\r\n    float: 'left',\r\n    select: {\r\n      padding: '2px'\r\n    }\r\n  },\r\n  select: {\r\n    backgroundColor: '#272822',\r\n    color: '#d6d6d6',\r\n    fontFamily: \"'Roboto Mono', monospace\",\r\n  }\r\n};\r\n\r\nconst LanguagePicker = () => {\r\n  const { i18n } = useTranslation();\r\n\r\n  const changeLanguage = (event) => {\r\n    i18n.changeLanguage(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div css={style}>\r\n      <div id=\"lng_select\" >\r\n        <select onChange={changeLanguage}>\r\n          <option value=\"en\" name=\"language\" defaultValue>\r\n            eng\r\n          </option>\r\n          <option value=\"es\" name=\"language\">\r\n            esp\r\n          </option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LanguagePicker;\r\n","/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport LenguagePicker from './LenguagePicker';\r\n\r\nconst style = {\r\n  maxWidth: '1200px',\r\n  display: 'block',\r\n  margin: '0 auto',\r\n  padding: '10px 0',\r\n  textAling: 'center',\r\n  marginBottom: 20,\r\n  '> a': {\r\n    marginRight: 25,\r\n    color: '#d6d6d6',\r\n  },\r\n  LenguagePicker: {\r\n    float: 'right',\r\n  },\r\n  '@media (max-width: 1200px)': {\r\n    paddingLeft: '10px',\r\n  }\r\n};\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav css={style}>\r\n      <Link to=\"/home\">Home</Link>\r\n      <Link to=\"/portfolio\">Portfolio</Link>\r\n      <LenguagePicker />\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;","/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\n\r\nconst style = {\r\n  bottom: 0,\r\n  width: '100%',\r\n  position: 'fixed',\r\n  marginTop: 40,\r\n  backgroundColor: '#3c7dde;',\r\n  color: 'white',\r\n  padding: '2px 4px',\r\n  a: {\r\n    color: 'white',\r\n  },\r\n  '.leftSide': {\r\n    float: 'left',\r\n  },\r\n};\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer css={style}>\r\n      <div className=\"left-side\">\r\n        <span>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" fill=\"currentColor\" class=\"bi bi-cloud-arrow-up-fill\" viewBox=\"0 0 16 16\">\r\n            <path d=\"M8 2a5.53 5.53 0 0 0-3.594 1.342c-.766.66-1.321 1.52-1.464 2.383C1.266 6.095 0 7.555 0 9.318 0 11.366 1.708 13 3.781 13h8.906C14.502 13 16 11.57 16 9.773c0-1.636-1.242-2.969-2.834-3.194C12.923 3.999 10.69 2 8 2zm2.354 5.146a.5.5 0 0 1-.708.708L8.5 6.707V10.5a.5.5 0 0 1-1 0V6.707L6.354 7.854a.5.5 0 1 1-.708-.708l2-2a.5.5 0 0 1 .708 0l2 2z\" />\r\n          </svg>{' '}\r\n          master\r\n        </span>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Suspense } from 'react';\r\n\r\nimport './translator.js';\r\nimport Router from './components/Router';\r\nimport Header from './components/core/Header';\r\nimport Footer from './components/core/Footer';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Suspense fallback={null}>\r\n        <Header />\r\n        <Router />\r\n        <Footer />\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter basename={process.env.PUBLIC_URL}>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}